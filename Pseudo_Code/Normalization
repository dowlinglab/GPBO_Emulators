....
Split into train and testing data
Normalize training and testing data (To avoid data leakage)
    
    #Import MinMaxScaler
    from sklearn.preprocessing import MinMaxScaler
    #For all training and testing data, fit a different scaler
    scaler = MinMaxScaler()
    scaler.fit(X_train, ....,..., y_test)
    #Set values to the scaled values
    X_train, X_test, y_train, y_test = scaler.transform(...) #Do for all 4

Train GP,

QUESTION: Do I unscale to evaluate the GP? I guess not but I'm not sure
QUESTION: How does normalizing the data effect the SSE, EI, stdev, etc. heat maps?

Optimize for theta_b and theta_opt
Make heat maps (if we want)
    Need to unscale data:
    #For all x and y training and testing data, fit a different scaler
    data = scaler.inverse_transform(data)
    plot on heat maps?
    
Calculate values of y given the GP optimal theta values and calculate sse
    Use unscaled values, since calculating SSE
QUESTION: Could I scale the experimental data using the same scaler for the training data to make life easier?

Augment Data
    Use scaled values

