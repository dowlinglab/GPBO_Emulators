Date and Time:  02-May-2023 (13:50:00)
Date and Time Saved:  2023/05/02/13-50
Case Study:  2.2
Number of Training Thetas:  200
Number of Experimental Data Points:  30
GP Emulating Function Output (T) or SSE (F)?  True
Scaling of Objective Function?  obj
Bounds On X Cut (T) or Normal (F)?  True
Dense Grid for Xexp? True
Evaluating Near Test Point (T) or True Parameter Set (F)?  True
GP Training Iterations (Gpytorch only):  500
GP Kernel Function:  Mat_52
GP Kernel Has Trained outputscale?:  True
GP Training Restarts (when lengthscale not set):  10
Training Data Noise st.dev:  0.01
Percentiles:  [0.]


GP Training Package:  gpytorch
All Data Path:  Input_CSVs/Train_Data/d=8/all_emul_data/t=6000_cut_bounds_dense.csv
GP Kernel lengthscale:  1
Traceback (most recent call last):
  File "/scratch365/mcarlozo/Toy_Problem/gpytorch_vs_scipy.py", line 154, in <module>
    scikit_gpytorch_mul_maps(all_data, X_space, Xexp, Yexp, Constants, true_p, CS, 
  File "/scratch365/mcarlozo/Toy_Problem/bo_methods_lib/scikit_gpytorch_debug.py", line 101, in scikit_gpytorch_mul_maps
    hyperparameters  = train_GP_model(model, likelihood, train_p, train_y, verbose, set_lengthscale, outputscl, initialize, train_iter)
  File "/scratch365/mcarlozo/Toy_Problem/bo_methods_lib/bo_functions_generic.py", line 741, in train_GP_model
    best_hyperparameters = optimize_hypers(model, likelihood, optimizer, initialize, train_param, train_data, set_lenscl, outputscl, lenscl_parm, noise_level, iterations)
  File "/scratch365/mcarlozo/Toy_Problem/bo_methods_lib/bo_functions_generic.py", line 642, in optimize_hypers
    loss = optimizer.step(closure)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/optim/optimizer.py", line 140, in wrapper
    out = func(*args, **kwargs)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/optim/lbfgs.py", line 426, in step
    loss, flat_grad, t, ls_func_evals = _strong_wolfe(
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/optim/lbfgs.py", line 148, in _strong_wolfe
    f_new, g_new = obj_func(x, t, d)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/optim/lbfgs.py", line 424, in obj_func
    return self._directional_evaluate(closure, x, t, d)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/optim/lbfgs.py", line 278, in _directional_evaluate
    loss = float(closure())
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/scratch365/mcarlozo/Toy_Problem/bo_methods_lib/bo_functions_generic.py", line 629, in closure
    loss = -mll(output, train_data)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/gpytorch/module.py", line 30, in __call__
    outputs = self.forward(*inputs, **kwargs)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/gpytorch/mlls/exact_marginal_log_likelihood.py", line 64, in forward
    res = output.log_prob(target)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/gpytorch/distributions/multivariate_normal.py", line 169, in log_prob
    inv_quad, logdet = covar.inv_quad_logdet(inv_quad_rhs=diff.unsqueeze(-1), logdet=True)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/linear_operator/operators/_linear_operator.py", line 1655, in inv_quad_logdet
    inv_quad_term, pinvk_logdet = func(
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/linear_operator/functions/_inv_quad_logdet.py", line 132, in forward
    solves, t_mat = linear_op._solve(rhs, preconditioner, num_tridiag=num_random_probes)
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/linear_operator/operators/_linear_operator.py", line 733, in _solve
    return utils.linear_cg(
  File "/afs/crc.nd.edu/user/m/mcarlozo/.conda/envs/Toy_Problem_env/lib/python3.9/site-packages/linear_operator/utils/linear_cg.py", line 185, in linear_cg
    raise RuntimeError("NaNs encountered when trying to perform matrix-vector multiplication")
RuntimeError: NaNs encountered when trying to perform matrix-vector multiplication
